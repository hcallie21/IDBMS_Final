
CREATE TABLE Major (
  MJ_ABV VARCHAR2(10) PRIMARY KEY,
  MAJOR_NAME VARCHAR2(100)
);

CREATE TABLE Students (
  STUDENT_ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(100),
  EMAIL VARCHAR2(100) UNIQUE,
  PASSWORD VARCHAR2(200),
  ACADEMIC_YEAR VARCHAR2(20)
);

CREATE SEQUENCE student_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE Teacher (
  TID NUMBER PRIMARY KEY,
  NAME VARCHAR2(100),
  EMAIL VARCHAR2(100) UNIQUE,
  PASSWORD VARCHAR2(200)
);

CREATE SEQUENCE teacher_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE Class (
  MJ_ABV VARCHAR2(10),
  COURSE_NUM VARCHAR2(10),
  SEM NUMBER,
  CREDIT NUMBER,
  COURSE_NAME VARCHAR2(100),
  DESCRIPTION VARCHAR2(500),
  PRIMARY KEY (MJ_ABV, COURSE_NUM),
  FOREIGN KEY (MJ_ABV) REFERENCES Major(MJ_ABV)
);

CREATE TABLE IT_Staff (
  IT_ID NUMBER PRIMARY KEY,
  NAME VARCHAR2(100),
  EMAIL VARCHAR2(100) UNIQUE,
  T_ACC CHAR(1),
  US_ACC_M CHAR(1),
  SYST_CONFIG CHAR(1),
  PASSWORD VARCHAR2(200)
);

CREATE SEQUENCE it_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE Section (
  CRN NUMBER PRIMARY KEY,
  AVG_GPA NUMBER(3,2),
  BLD VARCHAR2(20),
  RM NUMBER,
  DAYS VARCHAR2(10),
  TIME VARCHAR2(20),
  TID NUMBER,
  FOREIGN KEY (TID) REFERENCES Teacher(TID)
);

CREATE TABLE Advisor (
  AID NUMBER PRIMARY KEY,
  NAME VARCHAR2(100),
  EMAIL VARCHAR2(100) UNIQUE,
  DEPT VARCHAR2(100),
  PASSWORD VARCHAR2(200)
);

CREATE SEQUENCE advisor_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE Advises (
  SID NUMBER,
  AID NUMBER,
  PRIMARY KEY (SID, AID),
  FOREIGN KEY (SID) REFERENCES Students(STUDENT_ID),
  FOREIGN KEY (AID) REFERENCES Advisor(AID)
);

CREATE TABLE Completed_Courses (
  SID NUMBER,
  CRN NUMBER,
  PRIMARY KEY (SID, CRN),
  FOREIGN KEY (SID) REFERENCES Students(STUDENT_ID),
  FOREIGN KEY (CRN) REFERENCES Section(CRN)
);

CREATE TABLE Course_Covers (
  MJ_ABV VARCHAR2(10),
  COURSE_NUM VARCHAR2(10),
  TOPIC VARCHAR2(100),
  PRIMARY KEY (MJ_ABV, COURSE_NUM, TOPIC),
  FOREIGN KEY (MJ_ABV, COURSE_NUM) REFERENCES Class(MJ_ABV, COURSE_NUM)
);

CREATE TABLE Student_Interests (
  STUDENT_ID NUMBER,
  TOPIC VARCHAR2(100),
  PRIMARY KEY (STUDENT_ID, TOPIC),
  FOREIGN KEY (STUDENT_ID) REFERENCES Students(STUDENT_ID)
);

CREATE TABLE Majoring_In (
  STUDENT_ID NUMBER,
  MJ_ABV VARCHAR2(10),
  PRIMARY KEY (STUDENT_ID, MJ_ABV),
  FOREIGN KEY (STUDENT_ID) REFERENCES Students(STUDENT_ID),
  FOREIGN KEY (MJ_ABV) REFERENCES Major(MJ_ABV)
);

CREATE TABLE Manages (
  IT_ID NUMBER,
  MJ_ABV VARCHAR2(10),
  PRIMARY KEY (IT_ID, MJ_ABV),
  FOREIGN KEY (IT_ID) REFERENCES IT_Staff(IT_ID),
  FOREIGN KEY (MJ_ABV) REFERENCES Major(MJ_ABV)
);

CREATE TABLE Has_Sections (
  MJ_ABV VARCHAR2(10),
  COURSE_NUM VARCHAR2(10),
  CRN NUMBER,
  PRIMARY KEY (MJ_ABV, COURSE_NUM, CRN),
  FOREIGN KEY (MJ_ABV, COURSE_NUM) REFERENCES Class(MJ_ABV, COURSE_NUM),
  FOREIGN KEY (CRN) REFERENCES Section(CRN)
);

CREATE TABLE Pending_Requests (
  REQUEST_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  NAME VARCHAR2(100),
  EMAIL VARCHAR2(100),
  PASSWORD VARCHAR2(200),
  REQUESTED_ROLE VARCHAR2(20),
  DEPT VARCHAR2(100)
);
